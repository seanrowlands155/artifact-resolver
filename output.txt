-----------------
import org.sonatype.nexus.repository.storage.Asset;import org.sonatype.nexus.repository.storage.Query;import org.sonatype.nexus.repository.storage.StorageFacet;import groovy.json.JsonOutput;def repo = repository.repositoryManager.get('maven-releases');StorageFacet storageFacet = repo.facet(StorageFacet);def tx = storageFacet.txSupplier().get();tx.begin();Iterable<Asset> assets = tx.        findAssets(Query.builder().build(), [repo]);def urls = assets.collect {\"/repository/${repo.name}/${it.name()}\" };tx.commit();tx.close();def result = JsonOutput.toJson([        assets  : urls]);return result
-----------------
Request: 
{"name": "listrepo","type": "groovy","content": "import org.sonatype.nexus.repository.storage.Asset;import org.sonatype.nexus.repository.storage.Query;import org.sonatype.nexus.repository.storage.StorageFacet;import groovy.json.JsonOutput;def repo = repository.repositoryManager.get('maven-releases');StorageFacet storageFacet = repo.facet(StorageFacet);def tx = storageFacet.txSupplier().get();tx.begin();Iterable<Asset> assets = tx.        findAssets(Query.builder().build(), [repo]);def urls = assets.collect {\"/repository/${repo.name}/${it.name()}\" };tx.commit();tx.close();def result = JsonOutput.toJson([        assets  : urls]);return result"}
